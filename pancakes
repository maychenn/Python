# Description: creates a pancakes object and finds where to flip pancakes to create a stack of ascending diamete

class Pancakes(object):
   # initializer
   def __init__(self, stack):
       self.stack = stack

   # flips the stack at a given index
   def flip(self, i):
       self.stack[0:i + 1] = reversed(self.stack[0:i + 1])

   # returns true if the stack is sorted from smallest to largest
   def is_sorted(self):
       flag = 0
       i = 1
       while i < len(self.stack):
           if self.stack[i] < self.stack[i - 1]:
               flag = 1
           i += 1
       if flag == 0:
           return True
       else:
           return False
   # returns a string with the stack diameters
   def __str__(self):
       strng = ""
       for item in self.stack:
           strng += (str(item) + " ")

       return strng

# returns the index of the max value
def find_max(stack):
   return stack.index(max(stack))

# flips pancakes to front and prints out where the flips should occur
def flip_pancakes(p):
   end_index = len(p.stack) - 1
   
   while end_index > 0:
       #checks if the stack is sorted
       if p.is_sorted() == True:
           end_index = 0
       else:
           max_index = find_max(p.stack[:end_index + 1])
           #if the "max_index" is already in the correct position in the stack
           if max_index == end_index:
               end_index -= 1
           # if the max val is at the beginning, then flips the stack to the back
           elif max_index == 0:
               p.flip(end_index)
               print(len(p.stack) - end_index, end=" ")
               end_index -= 1
           # first flips at the max value, then flips to the end
           else:
               p.flip(max_index)
               print(len(p.stack) - max_index, end=" ")
               p.flip(end_index)
               print(len(p.stack) - end_index, end=" ")
               end_index -= 1

# main
def main():
   file = open("pancake.txt", 'r')
   line = file.readline()
   stacks = []

   #repeats the flip_pancakes() for each stack in the input file
   while line != '':
       stack = line.split()
       stack = list(map(int, stack))
       temp_pancakes = Pancakes(stack)
       stacks.append(temp_pancakes)
       print(temp_pancakes)
       num_flips = flip_pancakes(temp_pancakes)
       print(0)
       line = file.readline()
   file.close()

main()





